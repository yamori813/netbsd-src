/*	$NetBSD$	*/

/*-
 * Copyright (c) 2009 SHIMIZU Ryo <ryo@nerv.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _STARREG_H_
#define _STARREG_H_

/*
 * Reference:
 *   - Equuleus Series: STR813X/CNS213X, STR818X/CNS218X Network Access Processor DataSheet
 *     http://www.cnusers.org/index.php?option=com_remository&Itemid=32&func=fileinfo&id=96
 *
 *   - Orion Series: STR91XX/CNS11XX Broadband Home Gateway Processor Data Sheet
 *     http://www.cnusers.org/index.php?option=com_remository&Itemid=32&func=fileinfo&id=77
 */

/*
 * Physical/Virtual memory map for the STR8100/STR9100
 *
 * Physical STR8100                     STR9100
 * -------- --------------------------- ---------------------------
 * 00000000 Alias Memory                Alias Memory
 * 10000000 Flash/SRAM Memory           Flash/SRAM Memory
 * 18000000 IDE Device Reg              reserved
 * 20000000 SDR/DDR SDRAM Memory        SDR/DDR SDRAM Memory
 * 30000000 SPI Serial Flash Memory     SPI Serial Flash Memory
 * 40000000 -                           DDR SDRAM Control Reg
 * 60000000 Generic DMA                 Generic DMA
 * 70000000 NIC                         Switch and HWNAT
 * 71000000 SPI/PCM/TWI/I2S             -
 * 72000000 SDR/DDR SDRAM Control Reg   -
 * 73000000 Static Memory Control Reg   -
 * 74000000 IDE Control Reg             -
 * 76000000 MISC Reg                    MISC Reg
 * 77000000 Power Management Reg        Power Management Reg
 * 78000000 UART0 Reg                   UART0 Reg
 * 78800000 UART1 Reg                   -
 * 79000000 Timer Reg                   Timer Reg
 * 7A000000 WatchDog Timer Reg          WatchDog Timer Reg
 * 7B000000 RTC Reg                     RTC Reg
 * 7C000000 GPIOA Reg                   GPIOA Reg
 * 7C800000 GPIOB Reg                   GPIOB Reg
 * 7D000000 -                           Interrupt Control Reg
 * 80000000 -                           PCMCIA Control Reg
 * 90000000 -                           PCMCIA Attribute Memory
 * 94000000 -                           PCMCIA Common Memory
 * 98000000 -                           PCMCIA I/O Space
 * A0000000 PCI Config Data Reg         PCI Config Data Reg
 * A4000000 PCI Config Address Reg      PCI Config Address Reg
 * A8000000 PCI I/O Space               PCI I/O Space
 * B0000000 PCI Memory Space            PCI Memory Space
 * C0000000 USB1.1 Config Reg           USB1.1 Configuration Reg
 * C4000000 USB1.1 Operation Reg        USB1.1 Operation Reg
 * C8000000 USB2.0 Config Reg           USB2.0 Configuration Reg
 * CC000000 USB2.0 Operation Reg        USB2.0 Operation Reg
 * D0000000 USB 1.1/2.0 Device Reg      -
 * FFFFF000 Vector Interrupt Control    -
 */

#define STAR_PCLK		62500000	/* PCLK=62.5MHz */

#define STAR_SDRAM_MEMORY	0x20000000	/* main memory (physical) */

/*
 * Physical memory 0x10000000-0xFFFFFFFF are mapped to Virtual memory 0xFnnnnnnn.
 * struct pmap_devmap table is in evbarm/star/star_machdep.c
 */
#define STAR_IO_VBASE		0xF0000000
#define STAR_IO_P2V(paddr)	(((((paddr) >> 4) & 0x0ff80000) + ((paddr) & 0x0007ffff)) + STAR_IO_VBASE)


#define STAR_IO_SIZE		0x00080000	/* max I/O size */

/* read/write on virtual addr */
#define STAR_REG_READ32(addr)		(*(volatile uint32_t *)(STAR_IO_P2V(addr)))
#define STAR_REG_WRITE32(addr, v)	(*(volatile uint32_t *)(STAR_IO_P2V(addr)) = (v))
#define STAR_REG_READ32_PHYS(addr)	(*(volatile uint32_t *)(addr))
#define STAR_REG_WRITE32_PHYS(addr, v)	(*(volatile uint32_t *)(addr) = (v))


/*
 * STR8100, STR9100 SoC Devices
 */
#define STR9100_FLASH_SRAM_MEMORY		0x10000000	/*   ---  ,  STR9100 */
#define STR8100_FLASH_SRAM_MEMORY_BANK0		0x10000000	/* STR8100,    ---   */
#define STR8100_FLASH_SRAM_MEMORY_BANK1		0x11000000	/* STR8100,    ---   */
#define STR8100_FLASH_SRAM_MEMORY_BANK2		0x12000000	/* STR8100,    ---   */
#define STR8100_FLASH_SRAM_MEMORY_BANK3		0x13000000	/* STR8100,    ---   */
#define STR8100_IDE_DEVICE_REGISTER_SPACE	0x18000000	/* STR8100,    ---   */
#define STR8100_SPI_SERIAL_FLASH_MEMORY		0x30000000	/* STR8100,    ---   */
#define STR9100_STATIC_MEMORY_CONTROL_REGISTER	0x30000000	/*   ---  ,  STR9100 */
#define STR9100_SDRAM_CONTROL_REGISTER		0x40000000	/*   ---  ,  STR9100 */
#define STRx100_GENERIC_DMA_REGISTER		0x60000000	/* STR8100,  STR9100 */
#define STR8100_NIC_REGISTER			0x70000000	/* STR8100,    ---   */
#define STR9100_SWITCH_AND_HNAT_REGISTER	0x70000000	/*   ---  ,  STR9100 */
#define STR8100_SPI_PCM_TWI_I2S_REGISTER	0x71000000	/* STR8100,    ---   */
#define STR8100_SDRAM_CONTROL_REGISTER		0x72000000	/* STR8100,    ---   */
#define STR8100_STATIC_MEMORY_CONTROL_REGISTER	0x73000000	/* STR8100,    ---   */
#define STR8100_IDE_CONTROL_REGISTER		0x74000000	/* STR8100,    ---   */
#define STRx100_MISC_REGISTER			0x76000000	/* STR8100,  STR9100 */
#define STRx100_POWER_MANAGEMENT_REGISTER	0x77000000	/* STR8100,  STR9100 */
#define STRx100_UART0_REGISTER			0x78000000	/* STR8100,  STR9100 */
#define STR8100_UART1_REGISTER			0x78800000	/* STR8100,    ---   */
#define STRx100_TIMER_REGISTER			0x79000000	/* STR8100,  STR9100 */
#define STRx100_WDT_REGISTER			0x7A000000	/* STR8100,  STR9100 */
#define STRx100_RTC_REGISTER			0x7B000000	/* STR8100,  STR9100 */
#define STRx100_GPIOA_REGISTER			0x7C000000	/* STR8100,  STR9100 */
#define STR8100_GPIOB_REGISTER			0x7C800000	/* STR8100,    ---   */
#define STR9100_INTERRUPT_CONTROL_REGISTER	0x7D000000	/*   ---  ,  STR9100 */
#define STR9100_PCMCIA_CONTROL_REGISTER		0x80000000	/*   ---  ,  STR9100 */
#define STR9100_PCMCIA_ATTRIBUTE_MEMORY		0x90000000	/*   ---  ,  STR9100 */
#define STR9100_PCMCIA_COMMON_MEMORY		0x94000000	/*   ---  ,  STR9100 */
#define STR9100_PCMCIA_IO_SPACE			0x98000000	/*   ---  ,  STR9100 */
#define STRx100_PCI_CONFIGURATION_DATA_REGISTER	0xA0000000	/* STR8100,  STR9100 */
#define STRx100_PCI_CONFIGURATION_ADDR_REGISTER	0xA4000000	/* STR8100,  STR9100 */
#define STRx100_PCI_IO_SPACE			0xA8000000	/* STR8100,  STR9100 */
#define STRx100_PCI_MEM_SPACE			0xB0000000	/* STR8100,  STR9100 */
#define STRx100_USB11_CONFIGURATION_REGISTER	0xC0000000	/* STR8100,  STR9100 */
#define STRx100_USB11_OPERATION_REGISTER	0xC4000000	/* STR8100,  STR9100 */
#define STRx100_USB20_CONFIGURATION_REGISTER	0xC8000000	/* STR8100,  STR9100 */
#define STRx100_USB20_OPERATION_REGISTER	0xCC000000	/* STR8100,  STR9100 */
#define STR8100_USB11_20_DEVICE_REGISTER	0xD0000000	/* STR8100,    ---   */
#define STR8100_INTERRUPT_CONTROL_REGISTER	0xFFFFF000	/* STR8100,    ---   */

#define STRx100_PCI_IO_SPACE_SIZE		0x08000000
#define STRx100_PCI_MEM_SPACE_SIZE		0x10000000


/*
 * Peripheral Interrupts Source Mapping
 */
#define STAR_IRQ_TIMER1				0	/* STR8100,  STR9100 */
#define STAR_IRQ_TIMER2				1	/* STR8100,  STR9100 */
#define STAR_IRQ_CPUFREQ_CLKPWR			2	/* STR8100,  STR9100 */
#define STAR_IRQ_WDOG				3	/* STR8100,  STR9100 */
#define STAR_IRQ_GPIO				4	/* STR8100,  STR9100 */
#define STAR_IRQ_PCIEXT0			5	/* STR8100,  STR9100 */
#define STAR_IRQ_PCIEXT1			6	/* STR8100,  STR9100 */
#define STAR_IRQ_PCIEXT2			7	/* STR8100,  STR9100 */
#define STAR_IRQ_PCIBRIDGE			8	/* STR8100,  STR9100 */
#define STAR_IRQ_PCIARBITER			9	/*   ---  ,  STR9100 */
#define STAR_IRQ_UART0				9	/* STR8100,    ---   */
#define STAR_IRQ_UART1				10	/* STR8100,  STR9100 */
#define STAR_IRQ_DMA				11	/* STR8100,  STR9100 */
#define STAR_IRQ_DMAERR				12	/* STR8100,  STR9100 */
#define STAR_IRQ_PCMCIA				13	/*   ---  ,  STR9100 */
#define STAR_IRQ_RTC				14	/* STR8100,  STR9100 */
#define STAR_IRQ_PCM_EXTINT			15	/* STR8100 , STR9100 */
#define STAR_IRQ_USB				16	/* STR8100,    ---   */
#define STAR_IRQ_IDE				17	/* STR8100,    ---   */
#define STAR_IRQ_NIC_STAT			18	/* STR8100,  STR9100 */
#define STAR_IRQ_NIC_TX				19	/* STR8100,  STR9100 */
#define STAR_IRQ_NIC_RX				20	/* STR8100,  STR9100 */
#define STAR_IRQ_NIC_EMPTY			21	/* STR8100,  STR9100 */
#define STAR_IRQ_NIC_FULL			22	/* STR8100,  STR9100 */
#define STAR_IRQ_USB11				23	/* STR8100,  STR9100 */
#define STAR_IRQ_USB20				24	/* STR8100,  STR9100 */
#define STAR_IRQ_I2S				25	/* STR8100,    ---   */
#define STAR_IRQ_SPI				26	/* STR8100,    ---   */
#define STAR_IRQ_TWI				27	/* STR8100,    ---   */
#define STAR_IRQ_USB_VBUS			28	/* STR8100,    ---   */
#define STAR_IRQ_EXT_GPIOA0			29	/* STR8100,    ---   */
#define STAR_IRQ_EXT_GPIOA1			30	/* STR8100,    ---   */
#define STAR_IRQ_HSDMA				31	/* STR8100,    ---   */

#define STAR_IRQ_START				0
#define STAR_NIRQ				32


/*
 * STRx100 - UART0 (P:0x78000000, V:0xF7800000)
 *           UART1 (P:0x78800000, V:0xF7880000)
 */
#define STAR_UART_SIZE				0x20
#define STAR_UART_FREQ				24000000L	/* 24MHz (UART PSR=1) */


/*
 * STR8100 - DDR/SDR SDRAM Controller (P:0x72000000, V:0xF7200000)
 */
#define EQUULEUS_SDRAMCTRL_MEM_CFG_REG		(STR8100_SDRAM_CONTROL_REGISTER + 0x00)
# define EQUULEUS_SDRAMCTRL_MEM_CFG_DDR_EN	0x02000000
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMWT_MASK	0x00000030
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMW_x4	0x00000000
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMW_x8	0x00000010
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMW_x16	0x00000020
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_MASK	0x00000007
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_128Mb	0x00000000
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_256Mb	0x00000001
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_512Mb	0x00000002
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_1Gb	0x00000003
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_16Mb	0x00000004
# define EQUULEUS_SDRAMCTRL_MEM_CFG_MEMSZ_64Mb	0x00000005
#define EQUULEUS_SDRAMCTRL_DRAM_CFG_REG		(STR8100_SDRAM_CONTROL_REGISTER + 0x04)
#define EQUULEUS_SDRAMCTRL_PWON_INIT_CTRL_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x08)
#define EQUULEUS_SDRAMCTRL_DRAM_TIMING0_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x10)
#define EQUULEUS_SDRAMCTRL_DRAM_TIMING1_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x14)
#define EQUULEUS_SDRAMCTRL_DRAM_TIMING2_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x18)
#define EQUULEUS_SDRAMCTRL_PREREAD_TMO_DIS_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x1c)
#define EQUULEUS_SDRAMCTRL_PREREAD_EN_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x20)
#define EQUULEUS_SDRAMCTRL_PREREAD_TMO0_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x24)
#define EQUULEUS_SDRAMCTRL_PREREAD_TMO1_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x28)
#define EQUULEUS_SDRAMCTRL_DDQ_OUT_DLY_CTRL_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x30)
#define EQUULEUS_SDRAMCTRL_DDQ_IN_DLY_CTRL_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x34)
#define EQUULEUS_SDRAMCTRL_PAD_PWR_DOWN_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x3c)

/*
 * STR9100 - DDR/SDR SDRAM Controller (P:0x40000000, V:0xF4000000)
 */
#define ORION_SDRAMCTRL_DDRC_TIMING0_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x00)
#define ORION_SDRAMCTRL_DDRC_TIMING1_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x04)
#define ORION_SDRAMCTRL_DDRC_CFG_REG		(STR9100_SDRAM_CONTROL_REGISTER + 0x08)
#define ORION_SDRAMCTRL_BANK_CFG_REG		(STR9100_SDRAM_CONTROL_REGISTER + 0x0c)
# define ORION_SDRAMCTRL_BANK_CFG_BNK_EN	0x00000100
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DDW_MASK	0x000000c0
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DDW_x4	0x00000000
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DDW_x8	0x00000040
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DDW_x16	0x00000080
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DSZ_MASK	0x00000030
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DSZ_64Mb	0x00000000
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DSZ_128Mb	0x00000010
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DSZ_256Mb	0x00000020
# define ORION_SDRAMCTRL_BANK_CFG_BNK_DSZ_512Mb	0x00000030
# define ORION_SDRAMCTRL_BANK_CFG_BNK_MBW	0x00000001
#define ORION_SDRAMCTRL_PAD_PWR_DOWN_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x10)
#define ORION_SDRAMCTRL_DDQ_OUT_DELAY_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x14)
#define ORION_SDRAMCTRL_DDQ_IN_DELAY_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x18)
#define ORION_SDRAMCTRL_PREREAD_EN_REG		(STR9100_SDRAM_CONTROL_REGISTER + 0x1c)
#define ORION_SDRAMCTRL_GDMA_PREREAD_TMO_REG	(STR8100_SDRAM_CONTROL_REGISTER + 0x20)
#define ORION_SDRAMCTRL_GSW_PREREAD_TMO_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x24)
#define ORION_SDRAMCTRL_USB20_PREREAD_TMO_REG	(STR9100_SDRAM_CONTROL_REGISTER + 0x28)


/*
 * STR8100 - SPI/PCM/TWI/I2S Registers (P:0x71000000)
 */
#define EQUULEUS_TWI_OFFSETBASE			0x00000020
#define EQUULEUS_TWI_CTRL_REG			(0x00000020 - EQUULEUS_TWI_OFFSETBASE)
# define EQUULEUS_TWI_CTRL_EN			0x80000000
# define EQUULEUS_TWI_CTRL_SWAP_EN		0x01000000
# define EQUULEUS_TWI_CTRL_RUN_START		0x00000040
# define EQUULEUS_TWI_CTRL_TRANSFER_CMD_MASK	0x00000030
# define EQUULEUS_TWI_CTRL_TRANSFER_CMD_RD	0x00000000
# define EQUULEUS_TWI_CTRL_TRANSFER_CMD_WR	0x00000010
# define EQUULEUS_TWI_CTRL_TRANSFER_CMD_WRRD	0x00000020
# define EQUULEUS_TWI_CTRL_TRANSFER_CMD_RDWR	0x00000030
# define EQUULEUS_TWI_CTRL_WRDAT_LEN_MASK	0x0000000c
# define EQUULEUS_TWI_CTRL_WRDAT_LEN(n)		(((n) & 3) << 2)
# define EQUULEUS_TWI_CTRL_RDDAT_LEN_MASK	0x00000003
# define EQUULEUS_TWI_CTRL_RDDAT_LEN(n)		(((n) & 3))
#define EQUULEUS_TWI_TIMEOUT_REG		(0x00000024 - EQUULEUS_TWI_OFFSETBASE)
# define EQUULEUS_TWI_TIMEOUT_CLKDIV_MASK	0x0001ff00
# define EQUULEUS_TWI_TIMEOUT_CLKDIV(n)		(((n) & 0x1ff) << 8)
# define EQUULEUS_TWI_TIMEOUT_OUT_EN		0x00000080
# define EQUULEUS_TWI_TIMEOUT_OUT_VA_MASK	0x0000007f
# define EQUULEUS_TWI_TIMEOUT_OUT_VA(n)		((n) & 0x7f)
#define EQUULEUS_TWI_SLAVE_ADDR_REG		(0x00000028 - EQUULEUS_TWI_OFFSETBASE)
#define EQUULEUS_TWI_WR_DATA_REG		(0x0000002c - EQUULEUS_TWI_OFFSETBASE)
#define EQUULEUS_TWI_RD_DATA_REG		(0x00000030 - EQUULEUS_TWI_OFFSETBASE)
#define EQUULEUS_TWI_INT_STATUS_REG		(0x00000034 - EQUULEUS_TWI_OFFSETBASE)
# define EQUULEUS_TWI_INT_STATUS_MASK		0x0000ff00
# define EQUULEUS_TWI_INT_STATUS_SLW_NACK	0x00002000
# define EQUULEUS_TWI_INT_STATUS_WR_NACK	0x00003000
# define EQUULEUS_TWI_INT_STATUS_SLA_NACK	0x00004800
# define EQUULEUS_TWI_INT_STATUS_SDA_BERR	0x00007000
# define EQUULEUS_TWI_INT_STATUS_SCL_BERR	0x00009000
# define EQUULEUS_TWI_INT_STATUS_NORMAL		0x0000ff00
# define EQUULEUS_TWI_INT_ACTDONE		0x00000002
# define EQUULEUS_TWI_INT_BUSERR		0x00000001
#define EQUULEUS_TWI_INT_ENABLE_REG		(0x00000038 - EQUULEUS_TWI_OFFSETBASE)
#define EQUULEUS_TWI_REGSIZE			0x00000020

#define EQUULEUS_SPI_OFFSETBASE			0x00000040
#define EQUULEUS_SPI_CFG_REG			(0x00000040 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_CFG_EN			0x80000000
# define EQUULEUS_SPI_CFG_BOOT_HIGH_SPEED	0x40000000
# define EQUULEUS_SPI_CFG_SWAP_EN		0x01000000
# define EQUULEUS_SPI_CFG_CLKPOL		0x00004000
# define EQUULEUS_SPI_CFG_CLKPHA		0x00002000
# define EQUULEUS_SPI_CFG_LBK			0x00001000
# define EQUULEUS_SPI_CFG_MASTER_EN		0x00000800
# define EQUULEUS_SPI_CFG_FFEN			0x00000400
# define EQUULEUS_SPI_CFG_SERIAL_MODE		0x00000200
# define EQUULEUS_SPI_CFG_CHAR_LEN_MASK		0x00000003
# define EQUULEUS_SPI_CFG_CHAR_LEN(n)		((n) & 3)
#define EQUULEUS_SPI_STAT_REG			(0x00000044 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_STAT_BUSY			0x00000001
#define EQUULEUS_SPI_BIT_RATE_REG		(0x00000048 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_BIT_RATE(n)		((n) & 7)
#define EQUULEUS_SPI_TX_CTRL_REG		(0x0000004c - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_TX_CTRL_TXDAT_EOF		0x00000004
# define EQUULEUS_SPI_TX_CTRL_TXCH_NUM_MASK	0x00000003
# define EQUULEUS_SPI_TX_CTRL_TXCH_NUM(n)	((n) & 3)
#define EQUULEUS_SPI_TX_DATA_REG		(0x00000050 - EQUULEUS_SPI_OFFSETBASE)
#define EQUULEUS_SPI_RX_CTRL_REG		(0x00000054 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_RX_CTRL_RXDAT_EOF		0x00000004
# define EQUULEUS_SPI_RX_CTRL_RXCH_NUM_MASK	0x00000003
# define EQUULEUS_SPI_RX_CTRL_RXCH_NUM(n)	((n) & 3)
#define EQUULEUS_SPI_RX_DATA_REG		(0x00000058 - EQUULEUS_SPI_OFFSETBASE)
#define EQUULEUS_SPI_FIFO_TXCFG_REG		(0x0000005c - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_FIFO_TXCFG_TXFF_THREAD_2	0x00000000
# define EQUULEUS_SPI_FIFO_TXCFG_TXFF_THREAD_4	0x00000010
# define EQUULEUS_SPI_FIFO_TXCFG_TXFF_THREAD_6	0x00000020
# define EQUULEUS_SPI_FIFO_TXCFG_TXFF_STATMASK	0x0000000f
#define EQUULEUS_SPI_FIFO_TXCTRL_REG		(0x00000060 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_FIFO_TXCTRL_TXFF_DLY(n)	((n) & 0x1f)
#define EQUULEUS_SPI_FIFO_RXCFG_REG		(0x00000064 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_FIFO_RXCFG_RXFF_THREAD_2	0x00000000
# define EQUULEUS_SPI_FIFO_RXCFG_RXFF_THREAD_4	0x00000010
# define EQUULEUS_SPI_FIFO_RXCFG_RXFF_THREAD_6	0x00000020
# define EQUULEUS_SPI_FIFO_RXCFG_RXFF_STATMASK	0x0000000f
#define EQUULEUS_SPI_INTSTAT_REG		(0x00000068 - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_INTSTAT_TXBF_UNRN_FG	0x00000080
# define EQUULEUS_SPI_INTSTAT_RXBF_OVRN_FG	0x00000040
# define EQUULEUS_SPI_INTSTAT_TXFF_UNRN_FG	0x00000020
# define EQUULEUS_SPI_INTSTAT_RXFF_OVRN_FG	0x00000010
# define EQUULEUS_SPI_INTSTAT_TXBUF_FG		0x00000008
# define EQUULEUS_SPI_INTSTAT_RXBUF_FG		0x00000004
# define EQUULEUS_SPI_INTSTAT_TXFF_FG		0x00000002
# define EQUULEUS_SPI_INTSTAT_RXFF_FG		0x00000001
#define EQUULEUS_SPI_INT_ENABLE_REG		(0x0000006c - EQUULEUS_SPI_OFFSETBASE)
# define EQUULEUS_SPI_INT_TXBFERR		0x00000080
# define EQUULEUS_SPI_INT_RXBFERR		0x00000040
# define EQUULEUS_SPI_INT_TXFFERR		0x00000020
# define EQUULEUS_SPI_INT_RXFFERR		0x00000010
# define EQUULEUS_SPI_INT_TXBF			0x00000008
# define EQUULEUS_SPI_INT_RXBF			0x00000004
# define EQUULEUS_SPI_INT_TXFF			0x00000002
# define EQUULEUS_SPI_INT_RXFF			0x00000001
#define EQUULEUS_SPI_REGSIZE	0x00000020

#define EQUULEUS_PCM_OFFSETBASE			0x00000080
#define EQUULEUS_PCM_CFG_0_REG			(0x00000080 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_CFG_1_REG			(0x00000084 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_CH0_CFG_REG		(0x00000088 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_CH1_CFG_REG		(0x0000008c - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_CH2_CFG_REG		(0x00000090 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_CH3_CFG_REG		(0x00000094 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_TX_DATA_L_REG		(0x00000098 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_TX_DATA_H_REG		(0x0000009c - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_RX_DATA_L_REG		(0x000000a0 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_RX_DATA_H_REG		(0x000000a4 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_INT_STATUS_REG		(0x000000a8 - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_INT_ENABLE_REG		(0x000000ac - EQUULEUS_PCM_OFFSETBASE)
#define EQUULEUS_PCM_REGSIZE			0x00000020

#define EQUULEUS_I2S_OFFSETBASE			0x000000c0
#define EQUULEUS_I2S_CFG_REG			(0x000000c0 - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_R_TX_DATA_REG		(0x000000c4 - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_L_TX_DATA_REG		(0x000000c8 - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_R_RX_DATA_REG		(0x000000cc - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_L_RX_DATA_REG		(0x000000d0 - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_INT_STATUS_REG		(0x000000d4 - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_INT_ENABLE_REG		(0x000000d8 - EQUULEUS_I2S_OFFSETBASE)
#define EQUULEUS_I2S_REGSIZE			0x00000020


/*
 * STRx100 - Miscellaneous Registers (P:0x76000000, V:0xF7600000)
 */
#define STAR_MISC_REMAP_REG				(STRx100_MISC_REGISTER + 0x0000)
#define EQUULEUS_MISC_CHIP_CONFIG_REG			(STRx100_MISC_REGISTER + 0x0004)	/* STR8100 only */
# define EQUULEUS_MISC_CHIP_CONFIG_TEST_MODE_EN		0x00001000
# define EQUULEUS_MISC_CHIP_CONFIG_BYPASS		0x00000800
# define EQUULEUS_MISC_CHIP_CONFIG_TEST_MODE_MASK	0x00000700
# define EQUULEUS_MISC_CHIP_CONFIG_TEST_MODE(n)		(((n) & 7) << 8)
# define EQUULEUS_MISC_CHIP_CONFIG_SPISERIALFLASH	0x00000010
# define EQUULEUS_MISC_CHIP_CONFIG_ICESEL		0x00000004
# define EQUULEUS_MISC_CHIP_CONFIG_ENDIAN		0x00000002
# define EQUULEUS_MISC_CHIP_CONFIG_SPIBOOT		0x00000001

#define ORION_MISC_PCI_ID_CAPABILITY			(STRx100_MISC_REGISTER + 0x000c)
#define ORION_MISC_PCI_PCI66_CAPABILITY			(STRx100_MISC_REGISTER + 0x0018)
#define ORION_MISC_PCI_CONTROL				(STRx100_MISC_REGISTER + 0x001c)
#define ORION_MISC_PCI_BROKEN_STATUS			(STRx100_MISC_REGISTER + 0x0020)
#define ORION_MISC_PCI_TRANSFER_CONTROL			(STRx100_MISC_REGISTER + 0x0034)

#define EQUULEUS_MISC_PCI_CONTROL			(STRx100_MISC_REGISTER + 0x0010)
#define EQUULEUS_MISC_PCI_BROKEN_STATUS			(STRx100_MISC_REGISTER + 0x0014)
#define EQUULEUS_MISC_PCI_ID_CAPABILITY			(STRx100_MISC_REGISTER + 0x0018)
#define EQUULEUS_MISC_USB_PHY_CONTROL			(STRx100_MISC_REGISTER + 0x001c)

#define EQUULEUS_MISC_GPIOA_PIN_REG			(STRx100_MISC_REGISTER + 0x0020)	/* XXX: STR8100 only */
# define EQUULEUS_MISC_GPIOA31_SPICS3			0x80000000
# define EQUULEUS_MISC_GPIOA30_SPICS2			0x40000000
# define EQUULEUS_MISC_GPIOA29_SPICS1			0x20000000
# define EQUULEUS_MISC_GPIOA28_SPICS0			0x10000000
# define EQUULEUS_MISC_GPIOA27_SPICLK			0x08000000
# define EQUULEUS_MISC_GPIOA26_SPIDR			0x04000000
# define EQUULEUS_MISC_GPIOA25_WDTRST			0x02000000
# define EQUULEUS_MISC_GPIOA24_PHYLED2			0x01000000
# define EQUULEUS_MISC_GPIOA23_PHYLED1			0x00800000
# define EQUULEUS_MISC_GPIOA22_PHYLED0			0x00400000
# define EQUULEUS_MISC_GPIOA21_PCMCLK			0x00200000
# define EQUULEUS_MISC_GPIOA20_PCMFS			0x00100000
# define EQUULEUS_MISC_GPIOA19_PCMDT			0x00080000
# define EQUULEUS_MISC_GPIOA18_PCMDR			0x00040000
# define EQUULEUS_MISC_GPIOA17_I2SCLK			0x00020000
# define EQUULEUS_MISC_GPIOA16_I2SWS			0x00010000
# define EQUULEUS_MISC_GPIOA15_I2SSD			0x00008000
# define EQUULEUS_MISC_GPIOA14_TWISCL			0x00004000
# define EQUULEUS_MISC_GPIOA13_TWISDA			0x00002000
# define EQUULEUS_MISC_GPIOA3_UART_ACT1			0x00000008
# define EQUULEUS_MISC_GPIOA2_UART_ACT0			0x00000004
# define EQUULEUS_MISC_GPIOA1_EXT_INT30			0x00000002
# define EQUULEUS_MISC_GPIOA0_EXT_INT29			0x00000001
#define EQUULEUS_MISC_GPIOB_PIN_REG			(STRx100_MISC_REGISTER + 0x0020)
# define EQUULEUS_MISC_GPIOB31_PCIGNT1			0x80000000
# define EQUULEUS_MISC_GPIOB30_PCIREG1			0x40000000
# define EQUULEUS_MISC_GPIOB29_PCIGNT0			0x20000000
# define EQUULEUS_MISC_GPIOB28_PCIREQ0			0x10000000
# define EQUULEUS_MISC_GPIOB27_PCISERR			0x08000000
# define EQUULEUS_MISC_GPIOB26_PCIPERR			0x04000000
# define EQUULEUS_MISC_GPIOB25_PCISTOP			0x02000000
# define EQUULEUS_MISC_GPIOB24_PCIDEVSEL		0x01000000
# define EQUULEUS_MISC_GPIOB23_PCITRDY			0x00800000
# define EQUULEUS_MISC_GPIOB22_UART_RXD1		0x00400000
# define EQUULEUS_MISC_GPIOB21_UART_TXD1		0x00200000
# define EQUULEUS_MISC_GPIOB20_PWAIT			0x00100000	/* reserved */
# define EQUULEUS_MISC_GPIOB19_REGn			0x00080000	/* reserved */
# define EQUULEUS_MISC_GPIOB18_CE2			0x00040000	/* reserved */
# define EQUULEUS_MISC_GPIOB17_CE1			0x00020000	/* reserved */
# define EQUULEUS_MISC_GPIOB16_SRAM_WAIT3		0x00010000
# define EQUULEUS_MISC_GPIOB15_SRAM_WAIT2		0x00008000
# define EQUULEUS_MISC_GPIOB14_SRAM_WAIT1		0x00004000
# define EQUULEUS_MISC_GPIOB13_SRAM_CE3			0x00002000
# define EQUULEUS_MISC_GPIOB12_SRAM_CE2			0x00001000
# define EQUULEUS_MISC_GPIOB11_SRAM_CE1			0x00000800
# define EQUULEUS_MISC_GPIOB10_IDEDIOW			0x00000400
# define EQUULEUS_MISC_GPIOB9_IDEDIOR			0x00000200
# define EQUULEUS_MISC_GPIOB8_IDECS1			0x00000100
# define EQUULEUS_MISC_GPIOB7_IDECS0			0x00000080
# define EQUULEUS_MISC_GPIOB6_IDEINTRQ			0x00000040
# define EQUULEUS_MISC_GPIOB5_IDEDMACK			0x00000020
# define EQUULEUS_MISC_GPIOB4_IDEDMARQ			0x00000010
# define EQUULEUS_MISC_GPIOB3_IDEIORDY			0x00000008
# define EQUULEUS_MISC_GPIOB2_MIICOL			0x00000004
# define EQUULEUS_MISC_GPIOB1_PHYMDIO			0x00000002
# define EQUULEUS_MISC_GPIOB0_PHYMDC			0x00000001
#define EQUULEUS_MISC_GPIOA_PULLUPDOWN_REG		(STRx100_MISC_REGISTER + 0x0028)
# define EQUULEUS_MISC_GPIOAn_PULLUPDOWN(p, x)		(((x) & 3) << ((p) * 2))
# define EQUULEUS_MISC_GPIOA12_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(12, x)
# define EQUULEUS_MISC_GPIOA11_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(11, x)
# define EQUULEUS_MISC_GPIOA10_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(10, x)
# define EQUULEUS_MISC_GPIOA9_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(9, x)
# define EQUULEUS_MISC_GPIOA8_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(8, x)
# define EQUULEUS_MISC_GPIOA7_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(7, x)
# define EQUULEUS_MISC_GPIOA6_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(6, x)
# define EQUULEUS_MISC_GPIOA5_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(5, x)
# define EQUULEUS_MISC_GPIOA4_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(4, x)
# define EQUULEUS_MISC_GPIOA3_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(3, x)
# define EQUULEUS_MISC_GPIOA2_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(2, x)
# define EQUULEUS_MISC_GPIOA1_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(1, x)
# define EQUULEUS_MISC_GPIOA0_PULLUPDOWN(x)		STAR_MISC_GPIOAn_PULLUPDOWN(0, x)
# define EQUULEUS_MISC_GPIOA_PULLUPDOWN_VALUE_NONE	0
# define EQUULEUS_MISC_GPIOA_PULLUPDOWN_VALUE_PULLUP	1
# define EQUULEUS_MISC_GPIOA_PULLUPDOWN_VALUE_PULLDOWN	2
# define EQUULEUS_MISC_GPIOA_PULLUPDOWN_VALUE_KEEPER	3
# define EQUULEUS_MISC_GPIOA_PULLUPDOWN_VALUE_MASK	3
#define EQUULEUS_MISC_GPIOA_DRIVE_REG			(STRx100_MISC_REGISTER + 0x002c)
# define EQUULEUS_MISC_GPIOAn_DRIVE_PIN(p, x)		(((x) & 1) << (p))
# define EQUULEUS_MISC_GPIOA12_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(12, x)
# define EQUULEUS_MISC_GPIOA11_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(11, x)
# define EQUULEUS_MISC_GPIOA10_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(10, x)
# define EQUULEUS_MISC_GPIOA9_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(9, x)
# define EQUULEUS_MISC_GPIOA8_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(8, x)
# define EQUULEUS_MISC_GPIOA7_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(7, x)
# define EQUULEUS_MISC_GPIOA6_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(6, x)
# define EQUULEUS_MISC_GPIOA5_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(5, x)
# define EQUULEUS_MISC_GPIOA4_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(4, x)
# define EQUULEUS_MISC_GPIOA3_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(3, x)
# define EQUULEUS_MISC_GPIOA2_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(2, x)
# define EQUULEUS_MISC_GPIOA1_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(1, x)
# define EQUULEUS_MISC_GPIOA0_DRIVE(x)			STAR_MISC_GPIOAn_DRIVE(0, x)
# define EQUULEUS_MISC_GPIOA_DRIVE_VALUE_4mA		0
# define EQUULEUS_MISC_GPIOA_DRIVE_VALUE_8mA		1
# define EQUULEUS_MISC_GPIOA_DRIVE_VALUE_MASK		1


/*
 * STRx100 - Clock and Power Management (P:0x77000000, V:0xF7700000)
 */
#define ORION_CLKPWR_CLKGATE_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0000)
# define ORION_CLKPWR_CLKGATE_PCLK_UART			0x00010000
# define ORION_CLKPWR_CLKGATE_HCLK_USB			0x00000020
# define ORION_CLKPWR_CLKGATE_HCLK_SW			0x00000010
# define ORION_CLKPWR_CLKGATE_HCLK_DMA			0x00000008
# define ORION_CLKPWR_CLKGATE_HCLK_PCI			0x00000004
# define ORION_CLKPWR_CLKGATE_HCLK_PCMCIA		0x00000002
# define ORION_CLKPWR_CLKGATE_HCLK_SMC			0x00000001
#define ORION_CLKPWR_SOFTRST_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0004)
# define ORION_CLKPWR_SOFTRST_UART			0x00000040
# define ORION_CLKPWR_SOFTRST_USB			0x00000020
# define ORION_CLKPWR_SOFTRST_SW			0x00000010
# define ORION_CLKPWR_SOFTRST_DMA			0x00000008
# define ORION_CLKPWR_SOFTRST_PCI			0x00000004
# define ORION_CLKPWR_SOFTRST_PCMCIA			0x00000002
# define ORION_CLKPWR_SOFTRST_GLOBAL			0x00000001
#define ORION_CLKPWR_CLKCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0008)
# define ORION_CLKPWR_CLKCTRL_PCI_DIV(n)		(((n) & 3) << 10)
# define ORION_CLKPWR_CLKCTRL_PCI_DIV_MASK		ORION_CLKPWR_CLKCTRL_PCI_DIV(3)
# define ORION_CLKPWR_CLKCTRL_PCLK_66MHZ		(0 << 8)
# define ORION_CLKPWR_CLKCTRL_PCLK_APB			(1 << 8)
# define ORION_CLKPWR_CLKCTRL_PCLK_MASK			(1 << 8)
# define ORION_CLKPWR_CLKCTRL_HCLK_DIV(n)		(((n) & 3) << 4)
# define ORION_CLKPWR_CLKCTRL_FCLK_DIV(n)		(((n) & 3) << 2)
# define ORION_CLKPWR_CLKCTRL_CPU_PLL_SEL(n)		((n) & 3)
# define ORION_CLKPWR_CLKCTRL_CPU_PLL_SEL_MASK		0x00000003
#define ORION_CLKPWR_CPUINIT_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x000c)
# define ORION_CLKPWR_CPUINIT_PLLACQTIME_MASK		0x003f0000
# define ORION_CLKPWR_CPUINIT_PLLACQTIME(n)		(((n) & 63) << 16)
#define ORION_CLKPWR_PLLCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0010)
# define ORION_CLKPWR_PLLCTRL_SYSTEM_XTAL_PWD		0x00000020	/* XTAL Power Down Function */
# define ORION_CLKPWR_PLLCTRL_USBXTAL_PWD		0x00000010	/* XTAL Pad in USB PHY */
# define ORION_CLKPWR_PLLCTRL_PLLUSB_PWD		0x00000008	/* USB PHY */
# define ORION_CLKPWR_PLLCTRL_PLL330_PWD		0x00000004	/* PCI Bridge */
# define ORION_CLKPWR_PLLCTRL_PLL300_PWD		0x00000002	/* USB */
# define ORION_CLKPWR_PLLCTRL_PLL125_PWD		0x00000001	/* Switch MAC */
#define ORION_CLKPWR_RSTLATCHCFG_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0014)
# define ORION_CLKPWR_RSTLATCHCFG_PCMCIA_DIS		0x00010000
# define ORION_CLKPWR_RSTLATCHCFG_P1_CRSCOL_GPIO	0x00008000
# define ORION_CLKPWR_RSTLATCHCFG_P0_CRSCOL_GPIO	0x00004000
# define ORION_CLKPWR_RSTLATCHCFG_USB_CLK_SEL		0x00002000
# define ORION_CLKPWR_RSTLATCHCFG_LOW_CPU_CLK_SEL	0x00000800
# define ORION_CLKPWR_RSTLATCHCFG_UART_EN		0x00000200
# define ORION_CLKPWR_RSTLATCHCFG_FLASHBUSSIZE		0x00000100
# define ORION_CLKPWR_RSTLATCHCFG_CPU_CLK_SEL_MASK	0x000000c0
# define ORION_CLKPWR_RSTLATCHCFG_ICESEL		0x00000020
# define ORION_CLKPWR_RSTLATCHCFG_JTAG_EN		0x00000010
# define ORION_CLKPWR_RSTLATCHCFG_ENDIAN		0x00000008
# define ORION_CLKPWR_RSTLATCHCFG_TESTMODE(n)		(((n) & 3) << 1)
# define ORION_CLKPWR_RSTLATCHCFG_BYPASS		0x00000001
#define ORION_CLKPWR_REGULATORCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0018)
# define ORION_CLKPWR_REGULATORCTRL_VDD_18_SEL(n)	(((n) & 7) << 11)
# define ORION_CLKPWR_REGULATORCTRL_VDD_18_SEL_MASK	ORION_CLKPWR_REGULATORCTRL_VDD_18_SEL(7)
# define ORION_CLKPWR_REGULATORCTRL_GM2_18(n)		(((n) & 3) << 9)
# define ORION_CLKPWR_REGULATORCTRL_GM2_18_MASK		ORION_CLKPWR_REGULATORCTRL_GM2_18(3)
# define ORION_CLKPWR_REGULATORCTRL_VDD_25_SEL(n)	(((n) & 7) << 6)
# define ORION_CLKPWR_REGULATORCTRL_VDD_25_SEL_MASK	ORION_CLKPWR_REGULATORCTRL_VDD_25_SEL(7)
# define ORION_CLKPWR_REGULATORCTRL_GM2_25(n)		(((n) & 3) << 4)
# define ORION_CLKPWR_REGULATORCTRL_GM2_25_MASK		ORION_CLKPWR_REGULATORCTRL_GM2_25(3)
# define ORION_CLKPWR_REGULATORCTRL_BG_SEL(n)		(((n) & 3) << 2)
# define ORION_CLKPWR_REGULATORCTRL_BG_SEL_MASK		ORION_CLKPWR_REGULATORCTRL_BG_SEL(3)
# define ORION_CLKPWR_REGULATORCTRL_PD_18		0x00000002
# define ORION_CLKPWR_REGULATORCTRL_PD_25		0x00000001
#define ORION_CLKPWR_PADCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x001c)
# define ORION_CLKPWR_PADCTRL_P1_LOW_SPEED		0x00000008
# define ORION_CLKPWR_PADCTRL_P0_LOW_SPEED		0x00000004
# define ORION_CLKPWR_PADCTRL_PCI_DRIVE_SEL(n)		((n) & 3)
# define ORION_CLKPWR_PADCTRL_PCI_DRIVE_SEL_MASK	ORION_CLKPWR_PADCTRL_PCI_DRIVE_SEL(3)
#define EQUULEUS_CLKPWR_CLKGATE0_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0000)
# define EQUULEUS_CLKPWR_CLKGATE0_PCI			0x40000000
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_PCH		0x10000000
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_USBH		0x01000000
# define EQUULEUS_CLKPWR_CLKGATE0_MAC_CLK		0x00800000
# define EQUULEUS_CLKPWR_CLKGATE0_MDC_CLK		0x00400000
# define EQUULEUS_CLKPWR_CLKGATE0_PCLK_NIC		0x00200000
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_NIC		0x00100000
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_GDMA		0x00010000
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_VIC		0x00001000
# define EQUULEUS_CLKPWR_CLKGATE0_PCLK_IDE		0x00000200
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_IDE		0x00000100
# define EQUULEUS_CLKPWR_CLKGATE0_PCLK_SMC		0x00000020
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_SMC		0x00000010
# define EQUULEUS_CLKPWR_CLKGATE0_PCLK_SDMC		0x00000002
# define EQUULEUS_CLKPWR_CLKGATE0_HCLK_SDMC		0x00000001
#define EQUULEUS_CLKPWR_CLKGATE1_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0004)
# define EQUULEUS_CLKPWR_CLKGATE1_HCLK_HSDMA		0x20000000
# define EQUULEUS_CLKPWR_CLKGATE1_HCLK_USBD		0x10000000
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_GPIO		0x02000000
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_RTC		0x00800000
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_WDT		0x00200000
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_TIMER		0x00020000
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_UART1		0x00002000
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_UART0		0x00001000
# define EQUULEUS_CLKPWR_CLKGATE1_I2S_CLK		0x00000400
# define EQUULEUS_CLKPWR_CLKGATE1_PCM_CLK		0x00000040
# define EQUULEUS_CLKPWR_CLKGATE1_PCLK_P2S		0x00000002
# define EQUULEUS_CLKPWR_CLKGATE1_HCLK_SPI		0x00000001
#define EQUULEUS_CLKPWR_SOFTRST_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0008)
# define EQUULEUS_CLKPWR_SOFTRST_HSDMA			0x00010000
# define EQUULEUS_CLKPWR_SOFTRST_FE_PHY			0x00008000
# define EQUULEUS_CLKPWR_SOFTRST_USBD			0x00004000
# define EQUULEUS_CLKPWR_SOFTRST_GPIO			0x00002000
# define EQUULEUS_CLKPWR_SOFTRST_WDT			0x00001000
# define EQUULEUS_CLKPWR_SOFTRST_TIMER			0x00000800
# define EQUULEUS_CLKPWR_SOFTRST_UART1			0x00000400
# define EQUULEUS_CLKPWR_SOFTRST_UART0			0x00000200
# define EQUULEUS_CLKPWR_SOFTRST_P2S			0x00000100
# define EQUULEUS_CLKPWR_SOFTRST_PCI			0x00000080
# define EQUULEUS_CLKPWR_SOFTRST_USBH			0x00000040
# define EQUULEUS_CLKPWR_SOFTRST_NIC			0x00000020
# define EQUULEUS_CLKPWR_SOFTRST_GDMA			0x00000010
# define EQUULEUS_CLKPWR_SOFTRST_VIC			0x00000008
# define EQUULEUS_CLKPWR_SOFTRST_IDE			0x00000004
# define EQUULEUS_CLKPWR_SOFTRST_SMC			0x00000002
# define EQUULEUS_CLKPWR_SOFTRST_GLOBAL			0x00000001
#define EQUULEUS_CLKPWR_CLKCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x000c)
# define EQUULEUS_CLKPWR_CLKCTRL_MDC_DIV(n)		(((n) & 3) << 14)
# define EQUULEUS_CLKPWR_CLKCTRL_I2S_SEL(n)		(((n) & 3) << 12)
# define EQUULEUS_CLKPWR_CLKCTRL_PCI_DIV(n)		(((n) & 3) << 10)
# define EQUULEUS_CLKPWR_CLKCTRL_PCLK_DIV(n)		(((n) & 3) << 8)
# define EQUULEUS_CLKPWR_CLKCTRL_NICCLK_SEL		0x00000080
# define EQUULEUS_CLKPWR_CLKCTRL_RTC_SEL		0x00000040
# define EQUULEUS_CLKPWR_CLKCTRL_HCLK_DIV(n)		(((n) & 3) << 4)
# define EQUULEUS_CLKPWR_CLKCTRL_FCLK_DIV(n)		(((n) & 3) << 2)
# define EQUULEUS_CLKPWR_CLKCTRL_CPU_PLL_SEL(n)		((n) & 3)
# define EQUULEUS_CLKPWR_CLKCTRL_CPU_PLL_SEL_MASK	0x00000003
#define EQUULEUS_CLKPWR_PLLCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x0010)
# define EQUULEUS_CLKPWR_PLLCTRL_SYSTEM_XTAL_PWD	0x00000080
# define EQUULEUS_CLKPWR_PLLCTRL_PLLx7_PWD		0x00000040
# define EQUULEUS_CLKPWR_PLLCTRL_PLLx2250_PWD		0x00000020
# define EQUULEUS_CLKPWR_PLLCTRL_USBD_PHY_PWD		0x00000010
# define EQUULEUS_CLKPWR_PLLCTRL_USBH_PHY_PWD		0x00000008
# define EQUULEUS_CLKPWR_PLLCTRL_PLLx3_PWD		0x00000004
# define EQUULEUS_CLKPWR_PLLCTRL_PLLx8_PWD		0x00000002
# define EQUULEUS_CLKPWR_PLLCTRL_PLLx5_PWD		0x00000001
#define EQUULEUS_CLKPWR_PADCTRL_REG			(STRx100_POWER_MANAGEMENT_REGISTER + 0x001c)
# define EQUULEUS_CLKPWR_PADCTRL_MII_NOT_BOUNDED	0x00000008
# define EQUULEUS_CLKPWR_PADCTRL_MII_SPEED		0x00000004
# define EQUULEUS_CLKPWR_PADCTRL_PCI_DRIVE_SEL(n)	((n) & 3)


/*
 * STRx100 - Timer Registers (P:0x79000000)
 */
#define STAR_TIMER1_COUNTER				0x00000000	/* if up/down to 0, would be reloaded */
#define STAR_TIMER1_LOAD				0x00000004	/* if up/down to 0, reload this value */
#define STAR_TIMER1_MATCH1				0x00000008	/* Match1 interrupt when counter is equal to */
#define STAR_TIMER1_MATCH2				0x0000000c	/* Match2 interrupt when counter is equal to */
#define STAR_TIMER2_COUNTER				0x00000010	/* same as TIMER1 */
#define STAR_TIMER2_LOAD				0x00000014
#define STAR_TIMER2_MATCH1				0x00000018
#define STAR_TIMER2_MATCH2				0x0000001c
#define STAR_TIMER_CTRL					0x00000030
# define STAR_TIMER_CTRL_TM2_DECREMENT			0x00000400	/* RW: 0:Up, 1:Down */
# define STAR_TIMER_CTRL_TM1_DECREMENT			0x00000200	/* RW: 0:Up, 1:Down */
# define STAR_TIMER_CTRL_TM2OVERFLOWENABLE		0x00000020	/* RW: 0:Disable, 1:Enable */
# define STAR_TIMER_CTRL_TM2CLOCK_1KHZ			0x00000010	/* RW: 0:PCLK, 1:1KHz */
# define STAR_TIMER_CTRL_TM2ENABLE			0x00000008	/* RW: 0:Disable, 1:Enable */
# define STAR_TIMER_CTRL_TM1OVERFLOWENABLE		0x00000004	/* RW: 0:Disable, 1:Enable */
# define STAR_TIMER_CTRL_TM1CLOCK_1KHZ			0x00000002	/* RW: 0:PCLK, 1:1KHz */
# define STAR_TIMER_CTRL_TM1ENABLE			0x00000001	/* RW: 0:Disable, 1:Enable */
#define STAR_TIMER_INT_STATUS				0x00000034	/* RWC: 0:none: 1:active */
#define STAR_TIMER_INT_MASK				0x00000038	/* RW: 0:nonmask, 1:masked */
# define STAR_TIMER_INT_TM2OVERFLOW			0x00000020
# define STAR_TIMER_INT_TM2MATCH2			0x00000010
# define STAR_TIMER_INT_TM2MATCH1			0x00000008
# define STAR_TIMER_INT_TM1OVERFLOW			0x00000004
# define STAR_TIMER_INT_TM1MATCH2			0x00000002
# define STAR_TIMER_INT_TM1MATCH1			0x00000001
#define STAR_TIMER_FREERUN				0x00000040	/* Timer3 100KHz Free Running Counter [31:0] bit (STR8100 only) */
#define STAR_TIMER_FREERUN_CTRL				0x00000044
# define STAR_TIMER_FREERUN_TM3RUN			0000020000	/* RW: 0:stop, 1:run */
# define STAR_TIMER_FREERUN_TM3RESET			0x00010000	/* WCt */
# define STAR_TIMER_FREERUN_TM3HI			0x0000ffff	/* RO 100KHz Free Running Counter [47:32] bit */
#define STAR_TIMER_REGSIZE				0x48	/* size of Timer Registes */


/*
 * STRx100 - WatchDogTimer (P:0x7A000000)
 */
#define STAR_WDT_COUNTER_REG				0x00000000
#define STAR_WDT_LOAD_REG				0x00000004
#define STAR_WDT_RESTART_REG				0x00000008
# define STAR_WDT_RESTART_MAGIC				0x00005ab9
#define STAR_WDT_CONTROL_REG				0x0000000c
# define STAR_WDT_CONTROL_CLOCK_MASK			0x00000010
# define STAR_WDT_CONTROL_CLOCK_PCLK			0x00000000
# define STAR_WDT_CONTROL_CLOCK_10Hz			0x00000010
# define STAR_WDT_CONTROL_EXT				0x00000008
# define STAR_WDT_CONTROL_INTR				0x00000004
# define STAR_WDT_CONTROL_RESET				0x00000002
# define STAR_WDT_CONTROL_ENABLE			0x00000001
#define STAR_WDT_STATUS_REG				0x00000010
#define STAR_WDT_CLEAR_REG				0x00000014
#define STAR_WDT_INTRLEN_REG				0x00000018
#define STAR_WDT_REGSIZE				0x1c	/* size of WatchDogTimer Registes */


/*
 * STRx100 - RTC (P:0x7B000000)
 */
#define STAR_RTC_SEC					0x00000000
#define STAR_RTC_MIN					0x00000004
#define STAR_RTC_HOUR					0x00000008
#define STAR_RTC_DAYS					0x0000000c
#define STAR_RTC_ALRM_SEC				0x00000010
#define STAR_RTC_ALRM_MIN				0x00000014
#define STAR_RTC_ALRM_HOUR				0x00000018
#define STAR_RTC_RECORD					0x0000001c
#define STAR_RTC_CTRL					0x00000020
#define STAR_RTC_INTSTAT				0x00000034
#define STAR_RTC_REGSIZE				0x00000038


/*
 * STRx100 - GPIOA (P:0x7C000000)
 * STR8100 - GPIOB (P:0x7C800000)
 */
#define STAR_GPIO_DATA_OUTPUT_REG			0x00000000
#define STAR_GPIO_DATA_INPUT_REG			0x00000004
#define STAR_GPIO_PINDIR_REG				0x00000008
#define STAR_GPIO_DATA_SET_REG				0x00000010
#define STAR_GPIO_DATA_CLEAR_REG			0x00000014
#define STAR_GPIO_INT_ENABLE_REG			0x00000020
#define STAR_GPIO_INT_RAWSTATE_REG			0x00000024
#define STAR_GPIO_INT_MASKSTAT_REG			0x00000028
#define STAR_GPIO_INT_MASK_REG				0x0000002c
#define STAR_GPIO_INT_CLEAR_REG				0x00000030
#define STAR_GPIO_INT_TRIGGER_REG			0x00000034
#define STAR_GPIO_INT_BOTH_REG				0x00000038
#define STAR_GPIO_INT_RISENEG_REG			0x0000003c
#define STAR_GPIO_BOUNCE_ENABLE_REG			0x00000040
#define STAR_GPIO_BOUNCE_PRESCALE_REG			0x00000044
#define STAR_GPIO_REGSIZE				0x48
#define STAR_GPIO_PINS					32


/*
 * STRx100 - USB1.1 and USB2.0 Configuration Register, Operation Register
 */
#define STAR_USB11_CONF_COMMAND				0x00000004
#define STAR_USB11_CONF_MODE_ENABLE			0x00000044
#define STAR_USB11_CONF_REGSIZE				0x48
#define STAR_USB11_OPERATION_REGSIZE			0x5c
#define STAR_USB20_CONF_COMMAND				0x00000004
#define STAR_USB20_CONF_MODE_ENABLE			0x00000040
#define STAR_USB20_CONF_REGSIZE				0x44
#define STAR_USB20_OPERATION_REGSIZE			0x6c


/*
 * STR8100 - Vector Interrupt Control Registers (P:0xFFFFF000, V:0xFFFFF000)
 */
#define EQUULEUS_INT_RAWSTATUS				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x000)	/* RO: 0:noactive, 1:active */
#define EQUULEUS_INT_CLEAR				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x004)	/* WC: 0:noeffect, 1:clearactive */
#define EQUULEUS_INT_MASK				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x008)	/* RW: 0:unmasked, 1:masked */
#define EQUULEUS_INT_MASKCLEAR				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x00c)	/* WO: 0:noeffect, 1:clearmask */
#define EQUULEUS_INT_TRIGMODE				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x010)	/* RW: 0:LevelTrigger, 1:EdgeTrigger */
#define EQUULEUS_INT_TRIGLEVEL				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x014)	/* RW: 0:HighLevelTrigger, 1:LowLevelTrigger */
#define EQUULEUS_INT_FIQSEL				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x018)	/* RW: 0:IRQ, 1:FIQ */
#define EQUULEUS_INT_IRQSTATUS				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x01c)	/* RO: 0:Inactive, 1:Active */
#define EQUULEUS_INT_FIQSTATUS				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x020)	/* RO: 0:Inactive, 1:Active */
#define EQUULEUS_INT_SOFTINT				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x024)	/* RW: 0:Inactive, 1:Active(Enable) */
#define EQUULEUS_INT_SOFTCLEAR				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x028)	/* WO: 0:noeffect, 1:Disable */
#define EQUULEUS_INT_SOFTPRIOMASK			(STR8100_INTERRUPT_CONTROL_REGISTER + 0x02c)	/* RW: 0x00-0xFF */
#define EQUULEUS_INT_PWRINTSEL				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x034)	/* RW: 0:no wakeup intr, 1:selected wakeup intr */
#define EQUULEUS_INT_VECTORADDR(n)			(STR8100_INTERRUPT_CONTROL_REGISTER + 0x040 + (n) * 4)	/* n:0-31 */
#define EQUULEUS_INT_PRIORITY(n)			(STR8100_INTERRUPT_CONTROL_REGISTER + 0x0c0 + (n) * 4)	/* n:0-31, prio:0-7 */
#define EQUULEUS_INT_IRQVECTOR				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x140)	/* RW: address of current active ISR */
#define EQUULEUS_INT_VIC_EN				(STR8100_INTERRUPT_CONTROL_REGISTER + 0x144)	/* RW: 0:Disable VIC, 1:Enable VIC */


/*
 * STR9100 - Interrupt Controller (P:0x7D000000, V:0xF7D00000)
 */
#define ORION_INT_RAWSTATUS				(STR9100_INTERRUPT_CONTROL_REGISTER + 0x0000)	/* RO: IRQ bitmapped */
#define ORION_INT_MASK					(STR9100_INTERRUPT_CONTROL_REGISTER + 0x0004)	/* RW: IRQ bitmapped */
#define ORION_INT_CLEAR					(STR9100_INTERRUPT_CONTROL_REGISTER + 0x0008)	/* WO: IRQ bitmapped */
#define ORION_INT_TRIGMODE				(STR9100_INTERRUPT_CONTROL_REGISTER + 0x000c)	/* RW: 0:LevelTrigger, 1:EdgeTrigger */
#define ORION_INT_TRIGLEVEL				(STR9100_INTERRUPT_CONTROL_REGISTER + 0x0010)	/* RW: 0:HighLevelTrigger, 1:LowLevelTrigger */
#define ORION_INT_IRQSTATUS				(STR9100_INTERRUPT_CONTROL_REGISTER + 0x0014)	/* RO: 0:Inactive, 1:Active */
#define ORION_INT_FIQSEL				(STR9100_INTERRUPT_CONTROL_REGISTER + 0x0018)	/* RW: 0:IRQ, 1:FIQ */

#endif /* _STARREG_H_ */
